Priorities:
- Low) This could wait for MineSocieties 2.0
- Medium) This would improve the quality of my thesis delivery
- High) This is necessary for the thesis to be delivered

TODO:

- Medium) Add trade action
- Low) Compact agent's inventory everytime a new item is inserted
- Medium) Deal with growing short term and long term memories
- High) Make sure short and long term memories do not memorize timestamps
- High) "/agent talk <name>" should lock the player's chat to the agent
- Medium) Deletable agents

- Medium) Add wood chopping action

- Add more observations
--- High) Characters entering chatting range of agents
---

- More prompt engineering
--- Low) Investigate how fine-tuning could improve agent choices for ChatGPT

- Medium) Add compatibility with other models
--- Llama 3.0

- Medium) Agents module should abstract the NPC logic from EntityUtils so that if necessary it's easier to switch to another NPC plugin
--- MineSocieties should not ever depend on EntityUtils

- Low) Add description to commands
- Low) Allow users to select the skins of NPCs

--- Bugs ---
- Medium) NPCs in unloaded chunks will keep making decisions
- High) If 2 NPCs have the same name, things can get messy
- High) "/agent backup save <name>" if the directory 'name' exists, it doesn't delete the pre-existing files

--- Ideas ---
- Low) Make SocialObservations have a method called reactionUrgency() that returns
--- URGENT if the agent should react immediately
--- CAN_WAIT if the agent should put the observation in a queue and react to it later
--- IGNORE_IF_DECIDING if the agent should ignore the observation if they're querying the LLM on what to do due to something else
--- IGNORE_IF_BUSY if the agent can ignore the observation if they're currently doing an important action
- Low) Make it possible to chat with agents from normal chat when the message references the agent at the start.
--- Ex: "Hey Steve, could you give me some salmon, please?"
--- Could have a regex to detect common greetings and then check if the name is a valid nearby agent name


--- Future ---
- Low) Possible race conditions when GSON is serializing the AgentState while the main thread modifies it
- Low) Replace asynchronous behaviour (when LLM replies arrive, querying the LLM, etc) with synchronous behaviour
--- When querying the LLM, all information should be provided to the async task so that it doesn't need to read any shared data
--- When the LLM replies, the async task should create a BukkitRunnable to deal with it after some optional processing
--- Afterwards, all locks on AgentState may be removed

- Low) Make location bound actions more configurable. Ex: Farming could allow the specification of the max farming range